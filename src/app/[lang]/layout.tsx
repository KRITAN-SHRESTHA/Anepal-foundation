import Footer from '@/components/footer';
import Header from '@/components/header';
import { Toaster } from '@/components/ui/sonner';
import { DictionaryProvider } from '@/context/dictionary-context';
import { getDictionary } from '@/lib/get-dictionary';
import { i18n, Locale } from '@/lib/i18n-config';
import { TRPCProvider } from '@/trpc/client';
import type { Metadata } from 'next';
import { Geist, Geist_Mono, Quicksand } from 'next/font/google';
import '../globals.css';

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin']
});

const quickSand = Quicksand({
  variable: '--font-quicksand',
  subsets: ['latin']
});

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin']
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app'
};

export async function generateStaticParams() {
  return i18n.locales.map(locale => ({ lang: locale }));
}

export default async function RootLayout({
  children,
  params
}: Readonly<{
  children: React.ReactNode;
  params: Promise<{ lang: Locale }>;
}>) {
  const { lang } = await params;
  const dictionary = await getDictionary(lang);

  return (
    <html lang={lang}>
      <body
        className={`${geistSans.variable} ${geistMono.variable} ${quickSand.variable} antialiased`}
      >
        <DictionaryProvider dictionaryObj={dictionary} locale={lang}>
          <TRPCProvider>
            <Header />
            {children}
            <Footer />
            <Toaster />
          </TRPCProvider>
        </DictionaryProvider>
      </body>
    </html>
  );
}
